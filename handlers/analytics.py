from aiogram import Router, types
from database import Session, Transaction
from datetime import datetime

analytics_router = Router()

@analytics_router.message()
async def show_analytics(message: types.Message):
    if message.text != "üìà –ê–Ω–∞–ª—ñ–∑ –≤–∏—Ç—Ä–∞—Ç":
        return  # –Ü–≥–Ω–æ—Ä—É—î–º–æ –≤—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∫—Ä—ñ–º –ø–æ—Ç—Ä—ñ–±–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É

    session = Session()
    transactions = session.query(Transaction).filter(
        Transaction.user_id == message.from_user.id,
        Transaction.date.like(f"{datetime.now().strftime('%Y-%m')}%")
    ).all()

    if not transactions:
        await message.answer("üì≠ –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –∑–∞ —Ü–µ–π –º—ñ—Å—è—Ü—å!")
        return

    total = sum(t.amount for t in transactions)
    categories = {t.category: sum(t.amount for t in transactions if t.category == t.category) for t in transactions}
    
    report = "üìä –í–∞—à—ñ –≤–∏—Ç—Ä–∞—Ç–∏ –∑–∞ –º—ñ—Å—è—Ü—å:\n"
    for cat, amount in categories.items():
        report += f"‚ñ™ {cat}: {amount} –≥—Ä–Ω ({round(amount/total*100)}%)\n"
    
    await message.answer(report)
